{"version":3,"sources":["components/event/event.js","components/eventlist/event-list.js","mock-data.js","api.js","components/citysearch/citysearch.js","components/numberofevents/numberofevents.js","meetApp.png","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","this","props","event","location","summary","description","start","className","dateTime","onClick","e","setState","React","Component","EventList","events","map","id","mockData","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","encodeCode","encodeURIComponent","access_token","setItem","getEvents","NProgress","startsWith","done","token","removeQuery","url","locations","extractLocations","JSON","stringify","history","pushState","pathname","newurl","protocol","host","Set","CitySearch","handleItemClicked","suggestion","query","showSuggestions","updateEvents","handleInputChange","value","target","suggestions","filter","toUpperCase","indexOf","placeholder","type","onChange","onFocus","style","display","NumberOfEvents","length","readOnly","App","locationEvents","src","logo","alt","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ad67c331.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Event extends React.Component{\r\n  state = {\r\n    showMore: false\r\n  }\r\n\r\n  render(){\r\n    const { event: { location, summary, description, start } } = this.props;\r\n    return (\r\n      <div className='event'>\r\n        <h4 className='event-title'>{summary}</h4>\r\n        <p><b>Date:</b> {start.dateTime}</p>\r\n        <button onClick={e => this.setState({showMore: !this.state.showMore})} className='btn position-btn'>show more</button>\r\n        {this.state.showMore ? \r\n        <div className='details'>\r\n          <ul>\r\n            <li><b>Location:</b> {location} </li>\r\n            <li><b>Description:</b> {description}</li>\r\n          </ul>\r\n        </div> : <></>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Event;","import React from 'react';\r\n\r\n//components\r\nimport Event from '../event/event';\r\n\r\nclass EventList extends React.Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","const mockData = [\r\n  {\r\n      \"kind\": \"calendar#event\",\r\n      \"etag\": \"\\\"3181161784712000\\\"\",\r\n      \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n      \"status\": \"confirmed\",\r\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n      \"created\": \"2020-05-19T19:17:46.000Z\",\r\n      \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n      \"summary\": \"Learn JavaScript\",\r\n      \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n      \"location\": \"London, UK\",\r\n      \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n      },\r\n      \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n      },\r\n      \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n      },\r\n      \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n      },\r\n      \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n      \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n      },\r\n      \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n      \"sequence\": 0,\r\n      \"reminders\": {\r\n      \"useDefault\": true\r\n      },\r\n      \"eventType\": \"default\"\r\n   },\r\n   {\r\n      \"kind\": \"calendar#event\",\r\n      \"etag\": \"\\\"3181159875584000\\\"\",\r\n      \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n      \"status\": \"confirmed\",\r\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n      \"created\": \"2020-05-19T19:14:30.000Z\",\r\n      \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n      \"summary\": \"React is Fun\",\r\n      \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n      \"location\": \"Berlin, Germany\",\r\n      \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n      },\r\n      \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n      },\r\n      \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n      },\r\n      \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n      },\r\n      \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n      \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n      },\r\n      \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n      \"sequence\": 0,\r\n      \"reminders\": {\r\n      \"useDefault\": true\r\n      },\r\n      \"eventType\": \"default\"\r\n   }\r\n];\r\nexport { mockData };","import {mockData} from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n//Function to get Access Token\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\"https://t8ageqechl.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\");\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://t8ageqechl.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n\r\n// Function to retrieve events from the API\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  \r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://t8ageqechl.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\n// Function to get the locations of the events\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};","import React from 'react';\r\n\r\nimport {mockData} from '../../mock-data';\r\nimport { extractLocations } from '../../api';\r\n\r\nclass CitySearch extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n     \r\n    //state\r\n    this.state = {\r\n      query: '',\r\n      suggestions: [],\r\n      showSuggestions: false\r\n    }\r\n\r\n  }\r\n\r\n  //function that handles the clicked suggestion\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  //function to change 'query' when writting text in the input 'city-input'\r\n  handleInputChange = (event) => {\r\n    let locations = extractLocations(mockData);\r\n    const value = event.target.value;\r\n    const suggestions = locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  render(){\r\n    const { locations } = this.props;\r\n    return (\r\n      <div className=\"citySearch\">\r\n        <input placeholder='select your city...' type=\"text\" className=\"city-input\" value={this.state.query} onChange={this.handleInputChange} onFocus={() => {this.setState({showSuggestions : true})}} />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>see all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React from \"react\";\r\n\r\nclass NumberOfEvents extends React.Component {\r\n  render() {\r\n    const {events} = this.props;\r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n        <p>Events:</p>\r\n        <input\r\n          type=\"number\"\r\n          className=\"num-events\"\r\n          value={events.length}\r\n          readOnly\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NumberOfEvents;","export default __webpack_public_path__ + \"static/media/meetApp.ce3fab6c.png\";","import React from 'react';\r\n\r\n//components\r\nimport EventList from './components/eventlist/event-list';\r\nimport CitySearch from './components/citysearch/citysearch';\r\nimport NumberOfEvents from './components/numberofevents/numberofevents';\r\nimport { getEvents, extractLocations } from './api';\r\n//nprogress css file\r\nimport './nprogress.css';\r\nimport logo from './meetApp.png'\r\nclass App extends React.Component {\r\n  state = {\r\n    events: [],\r\n    locations: []\r\n  }\r\n  \r\n  updateEvents = (location) => {\r\n   getEvents().then((events) => {\r\n    const locationEvents = (location === 'all') ? events : events.filter((event) => event.location === location)\r\n    this.setState({\r\n      events : locationEvents\r\n    });\r\n  });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <div className='App'>\r\n      <div className='logo-div'><img className='logo' src={logo} alt=\"logo\" /></div>\r\n      <CitySearch locations={this.state.locations} updateEvents={this.updateEvents}/>\r\n      <NumberOfEvents events={this.state.events}/>\r\n      <EventList events={this.state.events}/>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}